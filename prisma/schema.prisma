// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum ProfileVisibility {
  PUBLIC
  PRIVATE
}

model Profile {
  id           String            @id @default(cuid())
  firstName    String
  lastName     String
  nickName     String?
  ign          String?
  descriptions String[]
  email        String
  mobile       String?
  website      String?
  github       String?
  linkedin     String?
  twitter      String?
  myanimelist  String?
  visibility   ProfileVisibility @default(PRIVATE)
}

model Skill {
  id          String            @id @default(cuid())
  category    String
  name        String           @unique
  experiences ExperienceSkill[]
}

model Experience {
  id               String             @id @default(cuid())
  title            String
  org              String
  isJob            Boolean
  startDate        DateTime
  endDate          DateTime?
  descriptions     String[]
  shortDescription String?
  githubLink       String?
  externalLinks    String[]
  skills           ExperienceSkill[]
  ResumeExperience ResumeExperience[]
}

model ExperienceSkill {
  id           String     @id @default(cuid())
  experienceId String
  experience   Experience @relation(fields: [experienceId], references: [id])
  skillId      String
  skill        Skill      @relation(fields: [skillId], references: [id])

  @@unique([experienceId, skillId])
}

model Education {
  id            String   @id @default(cuid())
  qualification String
  school        String
  startDate     DateTime
  endDate       DateTime
  descriptions  String[]
}

model Project {
  id               String          @id @default(cuid())
  category         String
  title            String
  year             String
  shortDescription String
  longDescriptions String[]
  img              String?
  link             String?
  tags             String[]
  ResumeProject    ResumeProject[]
}

model Resume {
  id          String             @id @default(cuid())
  name        String
  experiences ResumeExperience[]
  projects    ResumeProject[]
}

model ResumeExperience {
  id           String     @id @default(cuid())
  resumeId     String
  resume       Resume     @relation(fields: [resumeId], references: [id])
  experienceId String
  experience   Experience @relation(fields: [experienceId], references: [id])

  @@unique([resumeId, experienceId])
}

model ResumeProject {
  id        String  @id @default(cuid())
  resumeId  String
  resume    Resume  @relation(fields: [resumeId], references: [id])
  projectId String
  project   Project @relation(fields: [projectId], references: [id])

  @@unique([resumeId, projectId])
}
